一元三次方程求解
链接：https://ac.nowcoder.com/acm/problem/16694
来源：牛客网

题目描述 
有形如：ax3+bx2+cx+d=0  这样的一个一元三次方程。给出该方程中各项的系数(a，b，c，d  均为实数)，
并约定该方程存在三个不同实根(根的范围在-100至100之间)，且根与根之差的绝对值 ≥ 1。
要求由小到大依次在同一行输出这三个实根(根与根之间留有空格)，并精确到小数点后2位。

提示：记方程f(x) = 0，若存在2个数x1和x2，且x1 < x2，f(x1)*f(x2) < 0，则在(x1，x2)之间一定有一个根。
输入描述:
一行，4个实数A,B,C,D。
输出描述:
一行，3个实根，并精确到小数点后2位。
示例1
输入
复制
1 -5 -4 20
输出
复制
-2.00 2.00 5.00



思路：
在题目给的根的范围[-100,100]中，for循环查看左端点是否为根，否则采用二分法，左右端点代入求得值相乘小于零时，若右端点减左端点大于等于0.001，即根的值，则进入循环，
若左端点和中间值代入求得的值相乘大于零，则将中间值赋给左端点，否则赋给右端点，最后输出


代码：
//一元三次方程求解
#include<bits/stdc++.h>
using namespace std;
double a, b, c, d;
double s(double x)
{
    double num = x * x * x * a + x * x * b + x * c + d;
    return num;
}
int main()
{
    scanf("%lf%lf%lf%lf", &a, &b, &c, &d);//输入
    double l,r,mid;
    for (int i= -100;i <= 100;i++)//根的范围
    {
        l=i;
        r=i+1;
        if(s(l)==0)//判断零点
        {
            printf("%.2lf ",(double)i);
            continue;
        }
        else if(s(l)*s(r) < 0)
        {
            while (r-l>=0.001)
            {
                mid=(l+r)/2;
                if (s(l)*s(mid)>0)
                    l=mid;
                else
                    r=mid;
            }
            printf("%.2lf ",l);
        }
    }
    return 0;
}
 



