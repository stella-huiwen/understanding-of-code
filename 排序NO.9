分数线划定
链接：https://ac.nowcoder.com/acm/problem/16625
来源：牛客网

题目描述 
世博会志愿者的选拔工作正在 A 市如火如荼的进行。为了选拔最合适的人才，A 市对所有报名的选手进行了笔试，
笔试分数达到面试分数线的选手方可进入面试。面试分数线根据计划录取人数的150%划定，即如果计划录取m名志愿者，
则面试分数线为排名第m*150%（向下取整）名的选手的分数，而最终进入面试的选手为笔试成绩不低于面试分数线的所有选手。
现在就请你编写程序划定面试分数线，并输出所有进入面试的选手的报名号和笔试成绩。

输入描述:
第一行，两个整数n，m（5≤n≤5000，3≤m≤n)，中间用一个空格隔开，其中n 表示报名参加笔试的选手总数，m表示计划录取的志愿者人数。输入数据保证m*150%向下取整后小于等于n。
第二行到第n+1行，每行包括两个整数，中间用一个空格隔开，分别是选手的报名号k（1000≤k≤9999）和该选手的笔试成绩s（1≤s≤100）。数据保证选手的报名号各不相同。

输出描述:
第一行，有两个整数，用一个空格隔开，第一个整数表示面试分数线；第二个整数为进入面试的选手的实际人数。
从第二行开始，每行包含两个整数，中间用一个空格隔开，分别表示进入面试的选手的报名号和笔试成绩，按照笔试成绩从高到低输出，如果成绩相同，则按报名号由小到大的顺序输出。

示例1
输入
复制
6 3
9848 90
6731 88
1422 95
7483 84
8805 95
4162 88
输出
复制
88 5
1422 95
8805 95
9848 90
4162 88
6731 88
说明
m*150% = 3*150% = 4.5，向下取整后为 4。保证4个人进入面试的分数线为88，但因为88有重分，所以所有成绩大于等于 88 的选手都可以进入面试，故最终有 5 个人进入面试




思路：
先构建结构体，然后根据题意排序，最后输出，
其中需要注意的一点是不能直接根据算出的分数线的选手的名次来直接确定参加面试的人的人数，而是要根据算出的分数线选手的分数来确定参加面试的人
的人数，大于等于该分数的都可以参加面试，即要考虑重分的情况。




代码：
//分数线划定
#include<bits/stdc++.h>
using namespace std;
struct person//构建结构体
{
    int id;//报名号
    int score;//分数
};
bool cmp(person a,person b)//排序
{
    if(a.score==b.score)//若分数相同，按报名号排序
        return a.id<b.id;
    else
        return a.score>b.score;
}
int main()
{
    int n,m,k,j=1;
    double t;
    struct person x[5005],y[5005];
    cin>>n>>m;
    for(int i=1;i<=n;i++)//输入
        cin>>x[i].id>>x[i].score;
    sort(x+1,x+n+1,cmp);//排序
    t=m*1.5;
    k=(int)t;//分数线选手的名次
    for(int i=1;i<=n;i++)//筛选出高于分数线的选手
   {
       if(x[i].score>=x[k].score)
       {
           y[j]=x[i];
           j++;      
       }
    }
    cout<<x[k].score<<' '<<j-1<<endl;//输出
    for(int i=1;i<=j-1;i++)
        cout<<y[i].id<<' '<<y[i].score<<endl;
    return 0;
}
    
    
    
    



