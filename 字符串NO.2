忽略大小写的字符串比较
总时间限制: 1000ms 内存限制: 65536kB
描述
一般我们用strcmp可比较两个字符串的大小，比较方法为对两个字符串从前往后逐个字符相比较（按ASCII码值大小比较），直到出现不同的字符或遇到'\0'为止。如果全部字符都相同，则认为相同；如果出现不相同的字符，则以第一个不相同的字符的比较结果为准（注意：如果某个字符串遇到'\0'而另一个字符串还未遇到'\0'，则前者小于后者）。但在有些时候，我们比较字符串的大小时，希望忽略字母的大小，例如"Hello"和"hello"在忽略字母大小写时是相等的。请写一个程序，实现对两个字符串进行忽略字母大小写的大小比较。

输入
输入为两行，每行一个字符串，共两个字符串。（每个字符串长度都小于80）
输出
如果第一个字符串比第二个字符串小，输出一个字符"<"；
如果第一个字符串比第二个字符串大，输出一个字符">"；
如果两个字符串相等，输出一个字符"="。
样例输入
Hello, how are you?
hello, How are you?
样例输出
=


思路：
首先要将字符串统一大小写，便于比较
用char定义字符串时，采用了strcmp函数，返回值为0，则二者相等；大于0，则前者大于后者；小于0，则后者大于前者；
用string定义字符串时，可以直接比较大小
同时，我发现char和string定义时，获取字符串长度的方法不同，
两者都可用for循环，字符串!='\0'来判断；
char用strlen(字符串)
string用字符串.length()


代码：
//string用法
#include<bits/stdc++.h>
using namespace std;
int main()
{
    string n,m;
    getline(cin,n);//输入
    getline(cin,m);
    int len_n=n.length();//获取长度
    int len_m=m.length();
    for(int i=0;i<len_n;i++)//统一大小写
        if(n[i]>='a'&&n[i]<='z')
            n[i]-=32;
    for(int i=0;i<len_m;i++)
        if(m[i]>='a'&&m[i]<='z')
            m[i]-=32;
    if(n==m)//比较大小
        cout<<"=";
    else if(n>m)
        cout<<">";
    else if(n<m)
        cout<<"<";
    return 0;
}


法二：
//strcmp函数用法
#include<bits/stdc++.h>
using namespace std;
int main()
{
    char n[100],m[100];
    gets(n);//输入字符串
    gets(m);
    /*
    int len_n=strlen(n);
    int len_m=strlen(m);
    */
    for(int i=0;n[i]!='\0';i++)//将小写字母转换为大写字母
        if(n[i]>='a'&&n[i]<='z')
            n[i]-=32;
    for(int i=0;m[i]!='\0';i++)
        if(m[i]>='a'&&m[i]<='z')
            m[i]-=32;
    int ans=strcmp(n,m);//比较大小
    if(ans==0)
        cout<<'=';
    else if(ans>0)
        cout<<'>';
    else if(ans<0)
        cout<<"<";
    return 0;
}


法三：
#include<bits/stdc++.h>
#include<string.h>
using namespace std;
int main()
{
    char n[100],m[100];
    gets(n);//输入字符串
    gets(m);
    int ptr;
    ptr=strnicmp(n,m,strlen(n));//strnicmp函数：忽略大小写比较较字符串大小
    if(ptr>0)
    cout <<">";
    else if(ptr<0)
    cout<<"<";
    else if(ptr==0)
    cout<<"=";
    return 0;
} 
 
