书架
描述
John最近买了一个书架用来存放奶牛养殖书籍，但书架很快被存满了，只剩最顶层有空余。


John共有N头奶牛(1 ≤ N ≤ 20,000)，每头奶牛有自己的高度Hi(1 ≤ Hi ≤ 10,000)，N头奶牛的总高度为S。书架高度为B(1 ≤ B ≤ S < 2,000,000,007).


为了到达书架顶层，奶牛可以踩着其他奶牛的背，像叠罗汉一样，直到他们的总高度不低于书架高度。
当然若奶牛越多则危险性越大。为了帮助John到达书架顶层，找出使用奶牛数目最少的解决方案吧。


输入
第1行：空格隔开的整数N和B
第2~N+1行：第i+1行为整数Hi
输出
能达到书架高度所使用奶牛的最少数目
样例输入
6 40
6
18
11
13
19
11
样例输出
3


思路：
输入数据，然后降序排序，然后累加每一项，记录次数，判断是否和是否大于等于书架高度，若符号，则输出次数


代码：
//书架
#include<bits/stdc++.h>
using namespace std;
int a[20005];
bool cmp(int a,int b)
{
    return a>b;
}
int main()
{
    int n,m,ans=0; 
    long long sum=0;
    cin>>n>>m;//输入
    for(int i=0;i<n;i++)
        cin>>a[i];
    sort(a,a+n,cmp);//降序
    for(int i=0;i<n;i++)
    {
        sum+=a[i];//累加和
        ans++;//记录次数
        if(sum>=m)//判断是否符合条件
        break;
    }
    cout<<ans;//输出
    return 0;
}
