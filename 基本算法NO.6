石子游戏
问题描述
　　石子游戏的规则如下：
　　地上有n堆石子，每次操作可选取两堆石子（石子个数分别为x和y）并将它们合并，
  操作的得分记为(x+1)×(y+1)，对地上的石子堆进行操作直到只剩下一堆石子时停止游戏。
　　请问在整个游戏过程中操作的总得分的最大值是多少？
输入格式
　　输入数据的第一行为整数n，表示地上的石子堆数；第二行至第n+1行是每堆石子的个数。
输出格式
　　程序输出一行，为游戏总得分的最大值。
样例输入
10
5105
19400
27309
19892
27814
25129
19272
12517
25419
4053
样例输出
15212676150
数据规模和约定
　　1≤n≤1000，1≤一堆中石子数≤50000
  
  
  
  思路：
  该题的关键点在于每次都找出其中数目最多的两堆石头，先降序排序，则最大的两项为第一二项，进行得分操作后，将这两项合并，则合并后变为了最大的项，此时第二大的项为数组的第三项，
  即依次与剩下的每一项相加，直到最后一项为止
  
  
  代码：
  //石子游戏
#include<bits/stdc++.h>
using namespace std;
long long a[1005];
long long ans=0,sum=0;
bool cmp(int a,int b)
{
    return a>b;
}
int main()
{
    int n;
    cin>>n;
    for(int i=0;i<n;i++)//输入
        cin>>a[i];
    sort(a,a+n,cmp);//降序排序
    for(int i=0;i<n-1;i++)//下一项为除该项外最大的一项
    {
        ans=(a[i+1]+1)*(a[i]+1);//得分
        sum+=ans;//总分
        a[i+1]=a[i+1]+a[i];//合并石子堆
    }
    cout<<sum<<endl;//输出
    return 0;
}
  
