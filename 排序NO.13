图书管理员
链接：https://ac.nowcoder.com/acm/problem/16422
来源：牛客网

题目描述 
图书馆中每本书都有一个图书编码，可以用于快速检索图书，这个图书编码是一个正整数。

每位借书的读者手中有一个需求码，这个需求码也是一个正整数。如果一本书的图书编码恰好以读者的需求码结尾，那么这本书就是这位读者所需要的。

小 D 刚刚当上图书馆的管理员，她知道图书馆里所有书的图书编码，她请你帮她写一个程序，对于每一位读者，求出他所需要的书中图书编码最小的那本书，如果没有他需要的书，请输出-1。

输入描述:
输入的第一行，包含两个正整数 n 和 q，以一个空格分开，分别代表图书馆里书的数量和读者的数量。
接下来的 n 行，每行包含一个正整数，代表图书馆里某本书的图书编码。
接下来的 q 行，每行包含两个正整数，以一个空格分开，第一个正整数代表图书馆里读者的需求码的长度，第二个正整数代表读者的需求码。
输出描述:
输出有 q 行，每行包含一个整数，如果存在第 i 个读者所需要的书，则在第 i 行输出第 i 个读者所需要的书中图书编码最小的那本书的图书编码，否则输出-1。
示例1
输入
复制
5 5
2123
1123
23
24
24
2 23
3 123
3 124
2 12
2 12
输出
复制
23
1123
-1
-1
-1
说明
第一位读者需要的书有 2123、1123、23，其中 23 是最小的图书编码。
第二位读者需要的书有 2123、1123，其中 1123 是最小的图书编码。
对于第三位，第四位和第五位读者，没有书的图书编码以他们的需求码结尾，即没有他们需要的书，输出-1。
备注:
对于 20%的数据，1 ≤ n ≤ 2。  另有 20%的数据，q= 1。
另有 20%的数据，所有读者的需求码的长度均为1。
另有 20%的数据，所有的图书编码按从小到大的顺序给出。
对于 100%的数据，1≤n ≤1,000，1 ≤ q ≤ 1,000，所有的图书编码和需求码均不超过 10,000,000。



思路：
先对输入的图书编码进行升序排序，然后构建一个输入需求码长度，得到该长度的10的倍数的函数，
再在主函数中，用图书编码减去需求码，然后对函数中返回的数值取余，若结果为0，则说明该需求码是图书编码的尾数
然后输出该图书编码，否则输出-1



代码：
//图书管理员
#include<bits/stdc++.h>
using namespace std;
int f(int a)//构建一个需求码长度的函数
{
    int sum=1;
    for(int i=0;i<a;i++)
        sum*=10;
    return sum;
}
int main()
{
    int n,m;
    int flag;
    int len,ann;
    int a[1005],b[1005];
    cin>>n>>m;//输入
    for(int i=0;i<n;i++)
        cin>>a[i];
    sort(a,a+n);//升序
    for(int i=0;i<m;i++)
    {
        flag=0;
        cin>>len>>ann;
        for(int j=0;j<n;j++)
        {
            if((a[j]-ann)%f(len)==0)//判断是否为尾数
            {
                flag=1;
                cout<<a[j]<<endl;
                break;
            }
        }
            if(flag==0)//若找不到，则输出-1
                cout<<-1<<endl;
    }
    return 0;
}
            
                
            
        
    
    





