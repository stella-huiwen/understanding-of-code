均分纸牌
链接：https://ac.nowcoder.com/acm/problem/16739
来源：牛客网

题目描述 
有N堆纸牌，编号分别为1，2，…， N。每堆上有若干张，但纸牌总数必为N的倍数。可以在任一堆上取若于张纸牌，然后移动。
移牌规则为：在编号为1堆上取的纸牌，只能移到编号为2的堆上；在编号为N的堆上取的纸牌，只能移到编号为N-1的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。
现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。
例如 N=4，4堆纸牌数分别为：
①　9　②　8　③　17　④　6
移动3次可达到目的：
从③取4张牌放到 ④ （9 8 13 10） -> 从③取3张牌放到 ②（9 11 10 10）-> 从②取1张牌放到①（10 10 10 10）。
输入描述:
输入格式：
N（N堆纸牌，1<=N<=100）
A1 A2 … An （N 堆纸牌，每堆纸牌初始数，l<=Ai<=10000）
输出描述:
输出格式：
所有堆均达到相等时的最少移动次数。
示例1
输入
复制
4
9 8 17 6
输出
复制
3



思路：
先输入数据，然后求得平均值，循环求得每一项元素与平均值的差距，并把差距赋值给数组，再循环比较每一项元素与平均值的差距是否为零，
若不为零，则将该项元素与平均值的差距累加到下一项元素与平均值的差距上，
即先满足该项元素变成平均值的大小，然后记录次数，下一项元素依次遵循规律，直到循环结束；最后输出次数



代码：
//均分纸牌
#include<bits/stdc++.h>
using namespace std;
int a[105],sum=0,ans=0,b[105];
int main()
{
    int n;
    cin>>n;//输入
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
        sum+=a[i];//累加
    }
    sum/=n;//求平均值
    for(int i=0;i<n;i++)
        b[i]=a[i]-sum;//求每一项的差距
    for(int i=0;i<n;i++)
    {
        if(b[i]==0)//差距为零，则跳过
            continue;
        else
        {
            b[i+1]+=b[i];//若不为零，则先满足该项，然后下一项累加其差距
            ans++;//记录移动次数
        }
    }
    cout<<ans;//输出
    return 0;
}
