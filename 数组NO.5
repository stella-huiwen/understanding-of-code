编写两个任意位数的大数相乘的程序，给出计算结果。

题目描述： 输出两个不超过100位的大整数的乘积。




输入： 输入两个大整数，如1234567 和 123
输出： 输出乘积，如：151851741

原理：
              3    2    1    0     ->数组x,y的下标

              3    4    5    6     ->数组x[i]
          *
              1    2    7    8     ->数组y[j]
___________________________________________
             24   32   40   48
        21   28   35   42
    6   8    10   12
 3  4   5    6    
____________________________________________
 3  10  34   68   79   82   48    ->数组z[],z[i+j]+=x[i]*y[j];
                            48%10=8->z[0]=8
                       [82+48/10]%10=6->z[1]=6
                  [79+82/10]%10=7->z[2]=7
             [68+79/10]%10=6->z[3]=6
        [34+68/10]%10=1->z[4]=1
    [10+34/10]%10=4->z[5]=4
 [3+10/10]%10=4->z[6]=4
 
 
 即答案为4416768

代码：
//高精度乘法
#include<bits/stdc++.h>
using namespace std;
int main()
{
    string a,b;
    int x[1000],y[1000],z[1000]={0},len;
    memset(x,0,sizeof(x));
    memset(y,0,sizeof(y));
    cin>>a>>b;//输入两个字符串
    x[0]=a.length();//取得字符长度
    y[0]=b.length();
    for(int i=1;i<=x[0];i++)//将两个字符串倒序储存在数组中
        x[i]=a[x[0]-i]-'0';
    for(int i=1;i<=y[0];i++)
        y[i]=b[y[0]-i]-'0';
    for(int i=1;i<=x[0];i++)
        for(int j=1;j<=y[0];j++)
            z[i+j]+=x[i]*y[j];
    len=x[0]+y[0];
    for(int i=1;i<=len;i++)//进位
        if(z[i]>=10)
        {
            z[i+1]+=z[i]/10;
            z[i]%=10;
        }
    int m;
    for( m=len+5;m>0;m--)//除零
    {
        if(z[m]!=0)
            break;
    }
    for(int i=m;i>1;i--)//因为数组x和y是从1开始，则数组z从2开始
        printf("%d",z[i]);
    return 0;
}
