判断点是否在线段上
输入一点q(a,b)，和线段m的首尾两个端点p1(x,y),p2(x,y);
判断点q是否在线段m上

思路：
先建立点的结构体，输入三个点，
判断点是否在线段上，需要满足两个条件：
首先采用叉乘，即(q-p1)*(p2-p1)=0,
(x1<x2,y1<y2)
x1<=q.x<=x2,y1<=q.y<=y2

拓展;
三个点a,b,c叉乘大小的位置关系：

ab*ac={    >0     ac在ab的逆时针方向
           <0     ac在ab的顺时针方向
           =0     abc三点共线可能同向也可能反向




代码：
//判断点是否在线段上
#include<bits/stdc++.h>
using namespace std;
struct point//建立结构体点
{
    int x;//横坐标
    int y;//纵坐标
};
bool s(point p1,point p2,point q)
{//判断点是否在线段范围内
    if((q.x-p1.x)*(p2.y-p1.y)==(q.y-p1.y)*(p2.x-p1.x)&&min(p1.x,p2.x)<=q.x&&q.x<=max(p1.x,p2.x)&&min(p1.y,p2.y)<=q.y&&q.y<=max(p1.y,p2.y))
        return true;//点在p1,p2上
    else
        return false;//点不在p1,p2上
}
int main()
{
    struct point q,p1,p2;
    cin>>q.x>>q.y;//输入
    cin>>p1.x>>p1.y;
    cin>>p2.x>>p2.y;
    if(s(p1,p2,q))
        cout<<"YES"<<endl;//输出
    else
        cout<<"NO"<<endl;
    return 0;
}
    






