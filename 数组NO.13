龟兔赛跑模拟
资源限制
时间限制：1.0s   内存限制：512.0MB
问题描述
　　话说这个世界上有各种各样的兔子和乌龟，但是研究发现，所有的兔子和乌龟都有一个共同的特点——喜欢赛跑。于是世界上各个角落都不断在发生着乌龟和兔子的比赛，小华对此很感兴趣，于是决定研究不同兔子和乌龟的赛跑。他发现，兔子虽然跑比乌龟快，但它们有众所周知的毛病——骄傲且懒惰，于是在与乌龟的比赛中，一旦任一秒结束后兔子发现自己领先t米或以上，它们就会停下来休息s秒。对于不同的兔子，t，s的数值是不同的，但是所有的乌龟却是一致——它们不到终点决不停止。
　　然而有些比赛相当漫长，全程观看会耗费大量时间，而小华发现只要在每场比赛开始后记录下兔子和乌龟的数据——兔子的速度v1（表示每秒兔子能跑v1米），乌龟的速度v2，以及兔子对应的t，s值，以及赛道的长度l——就能预测出比赛的结果。但是小华很懒，不想通过手工计算推测出比赛的结果，于是他找到了你——清华大学计算机系的高才生——请求帮助，请你写一个程序，对于输入的一场比赛的数据v1，v2，t，s，l，预测该场比赛的结果。
输入格式
　　输入只有一行，包含用空格隔开的五个正整数v1，v2，t，s，l，其中(v1,v2<=100;t<=300;s<=10;l<=10000且为v1,v2的公倍数)
输出格式
　　输出包含两行，第一行输出比赛结果——一个大写字母“T”或“R”或“D”，分别表示乌龟获胜，兔子获胜，或者两者同时到达终点。
　　第二行输出一个正整数，表示获胜者（或者双方同时）到达终点所耗费的时间（秒数）。
样例输入
10 5 5 2 20
样例输出
D
4

代码：（法一）
#include<iostream>
 
using namespace std;
 
int main(){
    int v1,v2,t,s,l;
    cin>>v1>>v2>>t>>s>>l;
    int xr=0,xt=0,tr=0,tt=0;
    while(xr<l && xt<l){
        if(xr-xt>=t){
            tt+=s;
            xt=tt*v2;
            xr=tr*v1;
        }
        else{
            tr++;
            tt++;
            xr=v1*tr;
            xt=v2*tt;
        }
    }
 
    if(xr==xt){
        cout<<"D"<<endl;
        cout<<tt<<endl;
    }
    else if(xr>xt){
        cout<<"R"<<endl;
        cout<<tt<<endl;
    }
    else{
        cout<<"T"<<endl;
        cout<<l/v2<<endl;
    }
    return 0;
}


法二：
//龟兔赛跑模拟
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int v1,v2,t,s,l;//v1:兔子速度，v2:乌龟速度，t:超过的路程，s:休息的时间，l:赛道长度
    int sum1,sum2;//sum1记录兔子跑过的路程，sum2记录乌龟跑过的路程
    scanf("%d%d%d%d%d",&v1,&v2,&t,&s,&l);
    int a[10000],b[10000];
    sum1=0;a[0]=0;
    sum2=0;b[0]=0;
    int i=0,j=0;
    while(sum1<l&&sum2<l)
    {
        if((sum1-sum2)>=t)//判断兔子是否休息
        {

            while(s--)//兔子休息的时间
            {
                i++;
                a[i]=0;
                b[i]=v2;
                sum1+=a[i];
                sum2+=b[i];
            }
        }
        else
        {
            i++;
            a[i]=v1;b[i]=v2;
            sum1+=a[i];
            sum2+=b[i];
        }
    }
    if(sum1>=l&&sum2<l)
    {
        printf("R\n");
        printf("%d",i);
    }
    else if(sum2>=l&&sum1<l)
    {
        printf("T\n");
        printf("%d",i);
    }
    else if(sum1>=l&&sum2>=l)
    {
        printf("D\n");
        printf("%d",i);
    }
    return 0;
}
