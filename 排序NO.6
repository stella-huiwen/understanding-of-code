病人排序
总时间限制: 1000ms 内存限制: 65536kB
描述
病人登记看病，编写一个程序，将登记的病人按照以下原则排出看病的先后顺序：
1. 老年人（年龄 >= 60岁）比非老年人优先看病。
2. 老年人按年龄从大到小的顺序看病，年龄相同的按登记的先后顺序排序。
3. 非老年人按登记的先后顺序看病。
输入
第1行，输入一个小于100的正整数，表示病人的个数；
后面按照病人登记的先后顺序，每行输入一个病人的信息，包括：一个长度小于10的字符串表示病人的ID（每个病人的ID各不相同且只含数字和字母），一个整数表示病人的年龄，中间用单个空格隔开。
输出
按排好的看病顺序输出病人的ID，每行一个。
样例输入
5
021075 40
004003 15
010158 67
021033 75
102012 30
样例输出
021033
010158
021075
004003
102012


思路：
//病人排队
#include<bits/stdc++.h>
using namespace std;
struct person//建立结构体person
{
    int idx;//排队序号
    string id;//病人id号
    int age;//病人年龄
};
struct person old[105],men[105],young[105];
bool compare( person a, person b)//降序排序
{
    if(a.age==b.age)//当年龄相同时，按排队序号排列
    return a.idx<b.idx;
    else
    return a.age>b.age;
}
int main()
{
    int n,j=1,ans=0,k=1,ann=0;
    cin>>n;//输入
    for(int i=1;i<=n;i++)
    {
        cin>>men[i].id>>men[i].age;
        men[i].idx=i;
        if(men[i].age>=60)//用old储存年龄大于等于60的数据，
        {
            old[j]=men[i];
            ans++;
            j++;
        }
        if(men[i].age<60)//用young储存年龄小于60的数据
        {
            young[k]=men[i];
            k++;
            ann++;
        }
    }
    sort(old+1,old+ans+1,compare);//对old数组的年龄进行降序排序
    for(int i=1;i<=ans;i++)//输出
        cout<<old[i].id<<endl;
    for(int i=1;i<=ann;i++)
        cout<<young[i].id<<endl;
    return 0;
}


