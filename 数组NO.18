二维数组右上左下遍历
总时间限制: 1000ms 内存限制: 65536kB
描述
给定一个row行col列的整数数组array，要求从array[0][0]元素开始，按从左上到右下的对角线顺序遍历整个数组。
输入
输入的第一行上有两个整数，依次为row和col。
余下有row行，每行包含col个整数，构成一个二维整数数组。
（注：输入的row和col保证0 < row < 100, 0 < col < 100）
输出
按遍历顺序输出每个整数。每个整数占一行。
样例输入
3 4
1 2 4 7
3 5 8 10
6 9 11 12
样例输出
1
2
3
4
5
6
7
8
9
10
11



代码：
//二维数组右上左下遍历
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int a[101][101],n,m,i,j;
    cin>>n>>m;
    for(i=0;i<n;i++)//输出
        for(j=0;j<m;j++)
            cin>>a[i][j];
    for(i=0;i<=n+m-2;i++)
        for(j=0;j<n;j++)
            if(i-j>=0&&i-j<m)
                cout<<a[j][i-j]<<endl;
return 0;
}
