图像旋转
总时间限制: 1000ms 内存限制: 65536kB
描述
输入一个n行m列的黑白图像，将它顺时针旋转90度后输出。

输入
第一行包含两个整数n和m，表示图像包含像素点的行数和列数。1 <= n <= 100，1 <= m <= 100。
接下来n行，每行m个整数，表示图像的每个像素点灰度。相邻两个整数之间用单个空格隔开，每个元素均在0~255之间。
输出
m行，每行n个整数，为顺时针旋转90度后的图像。相邻两个整数之间用单个空格隔开。
样例输入
3 3
1 2 3
4 5 6
7 8 9
样例输出
7 4 1
8 5 2
9 6 3


思路：
将图像顺时针旋转90度，则变成先输出第一列的最后一个，然后行数依次递减，然后再第二列，行数再次接着递减，...，
直到最后一项为最后一列，第一行的那个数输出


代码：
//图像旋转
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n,m,i,j;
    int a[105][105];
    cin>>n>>m;
    for(i=1;i<=n;i++)
        for(j=1;j<=m;j++)
            cin>>a[i][j];//输入
    for(j=1;j<=m;j++)//旋转
    {
        for(i=n;i>=1;i--)
            cout<<a[i][j]<<" ";
        cout<<endl;
    }
    return 0;
}
