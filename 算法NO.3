瓷砖铺地
问题描述
　　有一长度为N(1<=Ｎ<=10)的地板，给定两种不同瓷砖：一种长度为1，另一种长度为2，数目不限。要将这个长度为N的地板铺满，一共有多少种不同的铺法？
　　例如，长度为4的地面一共有如下5种铺法：
　　4=1+1+1+1
　　4=2+1+1
　　4=1+2+1
　　4=1+1+2
　　4=2+2
　　编程用递归的方法求解上述问题。
输入格式
　　只有一个数N，代表地板的长度
输出格式
　　输出一个数，代表所有不同的瓷砖铺放方法的总数
样例输入
4
样例输出
5



思路：
瓷砖长度：            铺法：
         1               1
         2               2
         3               3
         4               5
        ...             ...
         n            n-1+n-2
         
因此当长度为1或2时，铺法为1或2，这为递归的出界条件，
然后之后的每一项为前两项的和

代码：
//瓷砖铺地
#include<bits/stdc++.h>
using namespace std;
int s(int a)
{
    if(a==1||a==2)//当长度为1和2时，铺法数目等于其长度
        return a;
    else 
        return s(a-1)+s(a-2);//通过计算可知，铺法的数目等于前两项铺法的数目
}
int main()
{
    int n;
    cin>>n;//输入
    cout<<s(n);//输出
    return 0;
}
        
